diff --git a/config/install/commerce_order.commerce_order_type.pos.yml b/config/install/commerce_order.commerce_order_type.pos.yml
index c75cb43..1997cfc 100755
--- a/config/install/commerce_order.commerce_order_type.pos.yml
+++ b/config/install/commerce_order.commerce_order_type.pos.yml
@@ -5,7 +5,7 @@ dependencies:
     module:
       - commerce_pos
   module:
-    - commerce_pos
+    - commerce_pos
 label: 'Point of Sale'
 id: pos
 workflow: order_pos
diff --git a/config/install/commerce_payment.commerce_payment_gateway.pos_cash.yml b/config/install/commerce_payment.commerce_payment_gateway.pos_cash.yml
index 02709be..2c54e92 100644
--- a/config/install/commerce_payment.commerce_payment_gateway.pos_cash.yml
+++ b/config/install/commerce_payment.commerce_payment_gateway.pos_cash.yml
@@ -16,6 +16,7 @@ configuration:
   mode: n/a
   payment_method_types:
     - credit_card
+  collect_billing_information: true
 conditions:
   -
     plugin: order_type
diff --git a/config/install/commerce_payment.commerce_payment_gateway.pos_credit.yml b/config/install/commerce_payment.commerce_payment_gateway.pos_credit.yml
index b9b6145..9697571 100644
--- a/config/install/commerce_payment.commerce_payment_gateway.pos_credit.yml
+++ b/config/install/commerce_payment.commerce_payment_gateway.pos_credit.yml
@@ -16,6 +16,7 @@ configuration:
   mode: n/a
   payment_method_types:
     - credit_card
+  collect_billing_information: true
 conditions:
   -
     plugin: order_type
diff --git a/config/install/commerce_payment.commerce_payment_gateway.pos_debit.yml b/config/install/commerce_payment.commerce_payment_gateway.pos_debit.yml
index f651a7c..02952c4 100644
--- a/config/install/commerce_payment.commerce_payment_gateway.pos_debit.yml
+++ b/config/install/commerce_payment.commerce_payment_gateway.pos_debit.yml
@@ -16,6 +16,7 @@ configuration:
   mode: n/a
   payment_method_types:
     - credit_card
+  collect_billing_information: true
 conditions:
   -
     plugin: order_type
diff --git a/config/install/commerce_payment.commerce_payment_gateway.pos_gift_card.yml b/config/install/commerce_payment.commerce_payment_gateway.pos_gift_card.yml
index 9900f24..687a048 100644
--- a/config/install/commerce_payment.commerce_payment_gateway.pos_gift_card.yml
+++ b/config/install/commerce_payment.commerce_payment_gateway.pos_gift_card.yml
@@ -16,6 +16,7 @@ configuration:
   mode: n/a
   payment_method_types:
     - credit_card
+  collect_billing_information: true
 conditions:
   -
     plugin: order_type
diff --git a/config/install/core.entity_view_display.commerce_order_item.default.commerce_pos_order_item.yml b/config/install/core.entity_view_display.commerce_order_item.default.commerce_pos_order_item.yml
index 9fc9b16..dd73bce 100644
--- a/config/install/core.entity_view_display.commerce_order_item.default.commerce_pos_order_item.yml
+++ b/config/install/core.entity_view_display.commerce_order_item.default.commerce_pos_order_item.yml
@@ -14,6 +14,16 @@ targetEntityType: commerce_order_item
 bundle: default
 mode: commerce_pos_order_item
 content:
+  created:
+    label: hidden
+    type: timestamp
+    weight: 0
+    region: content
+    settings:
+      date_format: medium
+      custom_date_format: ''
+      timezone: ''
+    third_party_settings: {  }
   purchased_entity:
     type: entity_reference_entity_view
     weight: 0
@@ -45,5 +55,6 @@ content:
     region: content
 hidden:
   adjustments: true
-  created: true
+  closing: false
+  search_api_excerpt: true
   unit_price: true
diff --git a/config/install/core.entity_view_display.commerce_order_item.return.default.yml b/config/install/core.entity_view_display.commerce_order_item.return.default.yml
index 5dc3912..4b06c38 100644
--- a/config/install/core.entity_view_display.commerce_order_item.return.default.yml
+++ b/config/install/core.entity_view_display.commerce_order_item.return.default.yml
@@ -51,3 +51,4 @@ content:
 hidden:
   adjustments: true
   created: true
+  search_api_excerpt: true
diff --git a/config/install/core.entity_view_display.commerce_product_variation.default.commerce_pos_product_select.yml b/config/install/core.entity_view_display.commerce_product_variation.default.commerce_pos_product_select.yml
index 4289b8a..26fe64d 100644
--- a/config/install/core.entity_view_display.commerce_product_variation.default.commerce_pos_product_select.yml
+++ b/config/install/core.entity_view_display.commerce_product_variation.default.commerce_pos_product_select.yml
@@ -49,3 +49,4 @@ content:
 hidden:
   field_upc: true
   product_id: true
+  search_api_excerpt: true
diff --git a/config/optional/search_api.index.pos.yml b/config/optional/search_api.index.pos.yml
index bcd790f..91710e9 100644
--- a/config/optional/search_api.index.pos.yml
+++ b/config/optional/search_api.index.pos.yml
@@ -1,38 +1,19 @@
 langcode: en
 status: true
 dependencies:
+  module:
+    - commerce_product
+    - search_api
   config:
-    - field.storage.commerce_product_variation.field_upc
     - field.storage.commerce_product.body
+    - field.storage.commerce_product_variation.field_upc
     - field.storage.commerce_product.stores
     - search_api.server.pos
-  module:
-    - commerce_product
-    - search_api_db
 id: pos
 name: 'Commerce POS'
 description: 'Basic POS index created by the Commerce POS module'
 read_only: false
 field_settings:
-  sku:
-    label: SKU
-    datasource_id: 'entity:commerce_product_variation'
-    property_path: sku
-    type: text
-    boost: !!float 2
-  title:
-    label: Title
-    datasource_id: 'entity:commerce_product_variation'
-    property_path: title
-    type: text
-  field_upc:
-    label: UPC
-    datasource_id: 'entity:commerce_product_variation'
-    property_path: field_upc
-    type: text
-    dependencies:
-      config:
-        - field.storage.commerce_product_variation.field_upc
   body:
     label: 'Product » Product » Body'
     datasource_id: 'entity:commerce_product_variation'
@@ -42,13 +23,23 @@ field_settings:
     dependencies:
       module:
         - commerce_product
+        - commerce_product
       config:
         - field.storage.commerce_product.body
-  title_1:
-    label: 'Product » Product » Title'
+  field_upc:
+    label: UPC
     datasource_id: 'entity:commerce_product_variation'
-    property_path: 'product_id:entity:title'
+    property_path: field_upc
+    type: text
+    dependencies:
+      config:
+        - field.storage.commerce_product_variation.field_upc
+  sku:
+    label: SKU
+    datasource_id: 'entity:commerce_product_variation'
+    property_path: sku
     type: text
+    boost: !!float 2
     dependencies:
       module:
         - commerce_product
@@ -60,8 +51,27 @@ field_settings:
     dependencies:
       module:
         - commerce_product
+        - commerce_product
       config:
         - field.storage.commerce_product.stores
+  title:
+    label: Title
+    datasource_id: 'entity:commerce_product_variation'
+    property_path: title
+    type: text
+    dependencies:
+      module:
+        - commerce_product
+  title_1:
+    label: 'Product » Product » Title'
+    datasource_id: 'entity:commerce_product_variation'
+    property_path: 'product_id:entity:title'
+    type: text
+    dependencies:
+      module:
+        - commerce_product
+        - commerce_product
+        - commerce_product
 datasource_settings:
   'entity:commerce_product_variation':
     bundles:
@@ -71,73 +81,62 @@ datasource_settings:
       default: true
       selected: {  }
 processor_settings:
-  aggregated_field: {  }
-  rendered_item: {  }
   add_url: {  }
-  ignorecase:
-    all_fields: true
-    fields:
-      - sku
-      - title
-      - field_upc
-      - body
-      - title_1
-    weights:
-      preprocess_index: -49
-      preprocess_query: -49
+  aggregated_field: {  }
   html_filter:
     all_fields: true
     fields:
+      - body
+      - field_upc
       - sku
       - title
-      - field_upc
-      - body
       - title_1
     title: true
     alt: true
     tags:
+      b: 2
+      em: 1
       h1: 5
       h2: 3
       h3: 2
       strong: 2
-      b: 2
-      em: 1
       u: 1
     weights:
       preprocess_index: -50
       preprocess_query: -50
-  transliteration:
+  ignorecase:
     all_fields: true
     fields:
+      - body
+      - field_upc
       - sku
       - title
-      - field_upc
-      - body
       - title_1
     weights:
-      preprocess_index: -48
-      preprocess_query: -48
+      preprocess_index: -49
+      preprocess_query: -49
+  rendered_item: {  }
   stemmer:
     all_fields: true
     fields:
+      - body
+      - field_upc
       - sku
       - title
-      - field_upc
-      - body
       - title_1
     exceptions:
-      texan: texa
       mexican: mexic
+      texan: texa
     weights:
       preprocess_index: -46
       preprocess_query: -44
   tokenizer:
     all_fields: true
     fields:
+      - body
+      - field_upc
       - sku
       - title
-      - field_upc
-      - body
       - title_1
     spaces: ''
     overlap_cjk: 1
@@ -145,6 +144,17 @@ processor_settings:
     weights:
       preprocess_index: -47
       preprocess_query: -46
+  transliteration:
+    all_fields: true
+    fields:
+      - body
+      - field_upc
+      - sku
+      - title
+      - title_1
+    weights:
+      preprocess_index: -48
+      preprocess_query: -48
 tracker_settings:
   default:
     indexing_order: fifo
diff --git a/tests/src/Kernel/DefaultConfigTest.php b/tests/src/Kernel/DefaultConfigTest.php
index fa0b28a..b259679 100644
--- a/tests/src/Kernel/DefaultConfigTest.php
+++ b/tests/src/Kernel/DefaultConfigTest.php
@@ -2,6 +2,7 @@

 namespace Drupal\Tests\commerce_pos\Kernel;

+use Drupal\Core\Config\Entity\ConfigEntityDependency;
 use Drupal\Core\Config\FileStorage;
 use Drupal\Core\Config\InstallStorage;
 use Drupal\Core\Config\StorageInterface;
@@ -30,24 +31,24 @@ class DefaultConfigTest extends KernelTestBase {
   /**
    * The following config entries are changed on module install.
    *
+   * Comparing them does not make sense.
+   *
+   * @todo Figure out why simpletest.settings is not installed.
+   *
    * @var array
    */
-  public static $skippedConfig = [];
+  public static $skippedConfig = [
+    'locale.settings' => ['path: '],
+    'syslog.settings' => ['facility: '],
+    'simpletest.settings' => TRUE,
+  ];

   /**
    * {@inheritdoc}
    */
   protected function setUp() {
     parent::setUp();
-
-    // @todo ModuleInstaller calls system_rebuild_module_data which is part of
-    //   system.module, see https://www.drupal.org/node/2208429.
-    include_once $this->root . '/core/modules/system/system.module';
-
-    // Set up the state values so we know where to find the files when running
-    // drupal_get_filename().
-    // @todo Remove as part of https://www.drupal.org/node/2186491
-    system_rebuild_module_data();
+    $this->installEntitySchema('user');
   }

   /**
@@ -73,48 +74,42 @@ class DefaultConfigTest extends KernelTestBase {
   public function testModuleConfig($module) {
     // System and user are required in order to be able to install some of the
     // other modules. Therefore they are put into static::$modules, which though
-    // doesn't install config files, so import those config files explicitly.
-    switch ($module) {
-      case 'system':
-      case 'user':
-        $this->installConfig([$module]);
-        break;
-    }
+    // doesn't install config files, so import those config files explicitly. Do
+    // this for all tests in case optional configuration depends on it.
+    $this->installConfig(['system', 'user']);

     $module_path = drupal_get_path('module', $module) . '/';

     /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
     $module_installer = $this->container->get('module_installer');

-    // @todo https://www.drupal.org/node/2308745 Rest has an implicit dependency
-    //   on the Node module remove once solved.
-    if (in_array($module, ['rest', 'hal'])) {
-      $module_installer->install(['node']);
+    $module_config_storage = new FileStorage($module_path . InstallStorage::CONFIG_INSTALL_DIRECTORY, StorageInterface::DEFAULT_COLLECTION);
+    $optional_config_storage = new FileStorage($module_path . InstallStorage::CONFIG_OPTIONAL_DIRECTORY, StorageInterface::DEFAULT_COLLECTION);
+
+    if (empty($optional_config_storage->listAll()) && empty($module_config_storage->listAll())) {
+      $this->markTestSkipped("$module has no configuration to test");
     }

     // Work out any additional modules and themes that need installing to create
     // an optional config.
-    $optional_config_storage = new FileStorage($module_path . InstallStorage::CONFIG_OPTIONAL_DIRECTORY, StorageInterface::DEFAULT_COLLECTION);
     $modules_to_install = [$module];
     $themes_to_install = [];
     foreach ($optional_config_storage->listAll() as $config_name) {
       $data = $optional_config_storage->read($config_name);
-      if (isset($data['dependencies']['module'])) {
-        $modules_to_install = array_merge($modules_to_install, $data['dependencies']['module']);
-      }
-      if (isset($data['dependencies']['theme'])) {
-        $themes_to_install = array_merge($themes_to_install, $data['dependencies']['theme']);
-      }
+      $dependency = new ConfigEntityDependency($config_name, $data);
+      $modules_to_install = array_merge($modules_to_install, $dependency->getDependencies('module'));
+      $themes_to_install = array_merge($themes_to_install, $dependency->getDependencies('theme'));
     }
-    $module_installer->install(array_unique($modules_to_install));
-    $this->container->get('theme_installer')->install($themes_to_install);
+    // Remove core because that cannot be installed.
+    $modules_to_install = array_diff(array_unique($modules_to_install), ['core']);
+    $module_installer->install($modules_to_install);
+    $this->container->get('theme_installer')->install(array_unique($themes_to_install));

     // Test configuration in the module's config/install directory.
-    $module_config_storage = new FileStorage($module_path . InstallStorage::CONFIG_INSTALL_DIRECTORY, StorageInterface::DEFAULT_COLLECTION);
-    $this->doTestsOnConfigStorage($module_config_storage);
+    $this->doTestsOnConfigStorage($module_config_storage, $module);

     // Test configuration in the module's config/optional directory.
-    $this->doTestsOnConfigStorage($optional_config_storage);
+    $this->doTestsOnConfigStorage($optional_config_storage, $module);
   }

   /**
@@ -123,7 +118,7 @@ class DefaultConfigTest extends KernelTestBase {
    * @param \Drupal\Core\Config\StorageInterface $default_config_storage
    *   The default config storage to test.
    */
-  protected function doTestsOnConfigStorage(StorageInterface $default_config_storage) {
+  protected function doTestsOnConfigStorage(StorageInterface $default_config_storage, $module) {
     /** @var \Drupal\Core\Config\ConfigManagerInterface $config_manager */
     $config_manager = $this->container->get('config.manager');

@@ -132,13 +127,6 @@ class DefaultConfigTest extends KernelTestBase {
     $active_config_storage = $this->container->get('config.storage');

     foreach ($default_config_storage->listAll() as $config_name) {
-      // Index has a requirement of search_api_db even though it only depends on
-      // search_api, its dependency needs search_api_db and drupal doesn't chain
-      // the dependencies correctly.
-      if ($config_name == 'search_api.index.pos') {
-        continue;
-      }
-
       if ($active_config_storage->exists($config_name)) {
         // If it is a config entity re-save it. This ensures that any
         // recalculation of dependencies does not cause config change.
@@ -152,6 +140,15 @@ class DefaultConfigTest extends KernelTestBase {
         }
         $result = $config_manager->diff($default_config_storage, $active_config_storage, $config_name);
         $this->assertConfigDiff($result, $config_name, static::$skippedConfig);
+        // The method call above will throw an exception if the configuration is
+        // different.
+        $this->pass("$config_name has no differences");
+      }
+      else {
+        $info = $this->container->get('extension.list.module')->getExtensionInfo($module);
+        if (!isset($info['package']) || $info['package'] !== 'Core (Experimental)') {
+          $this->fail("$config_name provided by $module does not exist after installing all dependencies");
+        }
       }
     }
   }
