<?php

/**
 * @file
 * The Commerce POS Keypad module file.
 */

use Drupal\commerce_pos_keypad\Render\Element\KeypadPreRender;

/**
 * Implements hook_theme().
 */
function commerce_pos_keypad_theme($existing, $type, $theme, $path) {
  \Drupal::moduleHandler()
    ->loadInclude('commerce_pos_keypad', 'inc', 'commerce_pos_keypad.theme');

  $hooks['commerce_pos_keypad_keypad'] = [
    'file' => 'commerce_pos_keypad.theme.inc',
    'variables' => [
      'input_type' => 'text',
    ],
  ];

  $hooks['commerce_pos_keypad_cash_input_box'] = [
    'file' => 'commerce_pos_keypad.theme.inc',
    'variables' => [
      'inputs' => [],
      'currency_code' => '',
      'denominations' => [],
    ],
  ];

  return $hooks;
}

/**
 * Implements hook_element_info_alter().
 */
function commerce_pos_keypad_element_info_alter(&$info) {
  // TODO this code seems inflexible, the user may well want to use keypad on
  // other field types, but the solution seems to be adding the pre-render to
  // literally every single field type and that doesn't seem good either.
  $form_elements = ['textfield', 'password', 'number'];

  foreach ($form_elements as $element) {
    $info[$element]['#pre_render'][] = [KeypadPreRender::class, 'preRenderKeypad'];
  }
}

