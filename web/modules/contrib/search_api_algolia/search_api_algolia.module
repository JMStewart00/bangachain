<?php

/**
 * @file
 * Provides an Algolia Search based service class for the Search API.
 */

use Algolia\AlgoliaSearch\Exceptions\AlgoliaException;
use Drupal\Core\Form\FormStateInterface;
use Drupal\search_api\Entity\Index;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function search_api_algolia_form_search_api_index_edit_form_alter(&$form, FormStateInterface $form_state) {
  $index = Index::load($form['id']['#default_value']);

  $form['options']['algolia_index_name'] = [
    '#type' => 'textfield',
    '#title' => t('Algolia index'),
    '#default_value' => $index->getOption('algolia_index_name') ?? '',
    '#weight' => 2,
  ];

  if (\Drupal::languageManager()->isMultilingual()) {
    $form['options']['algolia_index_apply_suffix'] = [
      '#type' => 'select',
      '#title' => t('Apply language suffix'),
      '#options' => [0 => t('No'), 1 => t('Yes')],
      '#default_value' => $index->getOption('algolia_index_apply_suffix') ?? 0,
      '#weight' => 1,
    ];

    $form['options']['algolia_index_name']['#description'] = t('Avoid language suffix here if the flag to apply language suffix is enabled');
  }

  // Show the list of available indexes for user to select from.
  $server = $index->getServerInstance();
  if ($server->getBackendId() == 'search_api_algolia') {
    try {
      $indices = $server->getBackend()->listIndexes();

      $element = [
        '#theme' => 'item_list',
        '#items' => $indices,
        '#title' => t('Available Algolia indexes'),
      ];

      $form['options']['algolia_index_list'] = [
        '#type' => 'item',
        '#markup' => render($element),
        '#weight' => 3,
      ];
    }
    catch (AlgoliaException $exception) {
      watchdog_exception('search_api_algolia', $exception, 'Unable to connect to Algolia.');
      \Drupal::messenger()->addError(t('Unable to connect to Algolia.'));
    }

  }
}
